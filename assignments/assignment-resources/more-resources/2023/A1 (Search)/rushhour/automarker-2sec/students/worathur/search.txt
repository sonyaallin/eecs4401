# In this file, please write a short response (~250 words) to the following question:
# What is the most significant thing you learned from this exercise?
# You may want to reflect on steps you took to arrive at answers, issues you encountered, strategies you used to resolve issues, and questions that were generated by the exercise or that remain to be resolved.
# Note that this portion of the exercise is not graded for content, just completion! 
# This guide to reflective writing may help you get started: https://www.student.unsw.edu.au/reflective-writing

The most significant lesson learned from this exercise is the different ways heuristics can make informed search strategies
efficient. One way heuristics can make these search strategies efficient is the speed in which the searches are able to
obtain a solution. This is evidenced by the ability of greedy-best-first search to find many solutions to
the given problem by relying only on heuristic values for decisions. Iterative approaches give informed search strategies
a better chance at achieving optimal solutions as they can iterate upon earlier solutions to get closer towards an optimal solution.
Iterative weighted a* search demonstrated how applying a weight to the heuristic function helps control the rate at which
refinement of solutions occurs.

In addition to learning about the different ways heuristics can be incorporated into the evaluation functions of these
search strategies, I learned good practices for designing informative heuristics. These heuristics can be obtained by
considering a simpler version of the problem. I learned that using admissible heuristics is important otherwise a* search
cannot reach an optimal solution without an imposed time restriction. I also learned that heuristics which are efficient
to compute are vital in time-constrained environments. Through trial and error, I gradually incorporated more domain
specific knowledge into my heuristics while ensuring they were still admissible.

For future assignments, I would like to spend more time solving problems on paper to gain a better understanding of
how a computer might reach a solution efficiently.